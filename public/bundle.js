/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
eval("// Define UI Vars\nvar form = document.querySelector('#task-form');\nvar taskList = document.querySelector('.collection');\nvar clearBtn = document.querySelector('.clear-tasks');\nvar filter = document.querySelector('#filter');\nvar taskInput = document.querySelector('#task'); // Load all event listeners\n\nloadEventListeners(); // Load all event listeners\n\nfunction loadEventListeners() {\n  // DOM Load Event\n  document.addEventListener('DOMContentLoaded', getTasks); // Add task event\n\n  form.addEventListener('submit', addTask); // Remove task event\n\n  taskList.addEventListener('click', removeTask); // Clear task event\n\n  clearBtn.addEventListener('click', clearTasks); // Filter Tasks event\n\n  filter.addEventListener('keyup', filterTask);\n} // Get Tasks from LS\n\n\nfunction getTasks() {\n  var tasks;\n\n  if (localStorage.getItem('tasks') === null) {\n    tasks = [];\n  } else {\n    tasks = JSON.parse(localStorage.getItem('tasks'));\n  }\n\n  tasks.forEach(function (task) {\n    // Create li element\n    var li = document.createElement('li'); // Add Class\n\n    li.className = 'collection-item'; // Create text node and append\n\n    li.appendChild(document.createTextNode(task)); // Create new link element\n\n    var link = document.createElement('a'); // Add class\n\n    link.className = 'delete-item secondary-content'; // Add icon html\n\n    link.innerHTML = '<i class=\"fa fa-remove\"></i>'; // Append the link to li\n\n    li.appendChild(link); // Append li to ul\n\n    taskList.appendChild(li);\n  });\n} // Add Task\n\n\nfunction addTask(e) {\n  if (taskInput.value === '') {\n    alert('Add a task');\n  } // Create li element\n\n\n  var li = document.createElement('li'); // Add Class\n\n  li.className = 'collection-item'; // Create text node and append\n\n  li.appendChild(document.createTextNode(taskInput.value)); // Create new link element\n\n  var link = document.createElement('a'); // Add class\n\n  link.className = 'delete-item secondary-content'; // Add icon html\n\n  link.innerHTML = '<i class=\"fa fa-remove\"></i>'; // Append the link to li\n\n  li.appendChild(link); // Append li to ul\n\n  taskList.appendChild(li);\n  storeTaskInLocalStorage(taskInput.value); // Clear input\n\n  taskInput.value = '';\n  e.preventDefault();\n}\n\nfunction storeTaskInLocalStorage(task) {\n  var tasks;\n\n  if (localStorage.getItem('tasks') === null) {\n    tasks = [];\n  } else {\n    tasks = JSON.parse(localStorage.getItem('tasks'));\n  }\n\n  tasks.push(task);\n  localStorage.setItem('tasks', JSON.stringify(tasks));\n} // Remove Task\n\n\nfunction removeTask(e) {\n  if (e.target.parentElement.classList.contains('delete-item')) {\n    if (confirm('Are you sure ?')) {\n      e.target.parentElement.parentElement.remove(); // remove from LS\n\n      removeTaskFromLocalStorage(e.target.parentElement.parentElement);\n    }\n  }\n}\n\nfunction removeTaskFromLocalStorage(taskItem) {\n  console.log(taskItem);\n  var tasks;\n\n  if (localStorage.getItem('tasks') === null) {\n    tasks = [];\n  } else {\n    tasks = JSON.parse(localStorage.getItem('tasks'));\n  }\n\n  tasks.forEach(function (task, index) {\n    if (taskItem.textContent === task) {\n      tasks.splice(index, 1);\n    }\n\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  });\n} // Clear tasks\n\n\nfunction clearTasks() {\n  // taskList.innerHTML = '';\n  // Faster\n  while (taskList.firstChild) {\n    taskList.removeChild(taskList.firstChild);\n  } // Clear from LS\n\n\n  clearTasksFromLocalStorage();\n}\n\nfunction clearTasksFromLocalStorage() {\n  localStorage.clear();\n} // Filter tasks\n\n\nfunction filterTask(e) {\n  var text = e.target.value.toLowerCase();\n  document.querySelectorAll('.collection-item').forEach(function (task) {\n    var itemText = task.firstChild.textContent;\n\n    if (itemText.toLowerCase().indexOf(text) != -1) {\n      task.style.display = 'block';\n    } else {\n      task.style.display = 'none';\n    }\n  });\n}\n\n//# sourceURL=webpack://todoist-with-es6/./src/app.js?");
/******/ })()
;